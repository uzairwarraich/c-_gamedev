/*
 * Vec2d.cpp
 *
 *  Created on: Dec. 4, 2022
 *      Author: uzair
 */



#include "Vec2d.h"
#include "utils.h"
#include <cassert>
#include <cmath>

std::ostream& operator<<(std::ostream& consoleOut, const Vec2d& vec){

	std::cout << "X: " << vec.mX << " Y: " << vec.mY << std::endl;
	return consoleOut;
}

bool Vec2d::operator==(const Vec2d& vec2) const {

	return IsEqual(mX, vec2.mX) && IsEqual(mY, vec2.mY);

}

bool Vec2d::operator!=(const Vec2d& vec2) const {

	return !(*this == vec2);
}

Vec2d Vec2d::operator-() const{

	//returns a new vector thats negated, that is why this function takes no params and is const because it doesnt change
	//the current class, it just uses the member variables, negates them and creates a new vector.
	return Vec2d(-mX,-mY);
}

Vec2d Vec2d::operator*(float scale) const{

	return Vec2d(scale * mX, scale * mY);
}

Vec2d Vec2d::operator/(float scale) const {

	assert(fabsf(scale)> EPSILON);

	return Vec2d(mX/scale, mY/scale);
}
